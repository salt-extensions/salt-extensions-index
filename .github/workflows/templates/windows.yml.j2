

  {{ slug }}-windows:
    name: {{ package }} Windows
    runs-on: windows-latest
    continue-on-error: true

    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        python-version:
          {%- for python_version in python_versions %}
          - {{ python_version}}
          {%- endfor %}
        salt-version:
          - master
          {%- for salt_version in salt_versions %}
          - {{ salt_version}}
          {%- endfor %}

    steps:
      {%- raw %}
      - name: Define Results Directory
        shell: bash
        run: |
          echo "RESULTS_DIR=.cache/${{ matrix.salt-version }}/${{ runner.os }}/${{ matrix.python-version }}" >> $GITHUB_ENV

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      {%- endraw %}

      - name: Download And Extract {{ package }}
        id: download-and-extract
        shell: bash
        run: |
          mkdir pkg
          cd pkg
          curl -Ls {{ package_url }} | tar zxvf - --strip 1
          ls -lah

      {%- raw %}

      - name: Set Test Run Environment Variable
        shell: bash
        run: |
          echo USE_STATIC_REQUIREMENTS=1 >> $GITHUB_ENV
          if [ "${{ matrix.salt-version }}" == "master" ]; then
            echo 'SALT_REQUIREMENT="git+https://github.com/saltstack/salt@master"' >> $GITHUB_ENV
          else
            echo 'SALT_REQUIREMENT="salt==${{ matrix.salt-version }}"' >> $GITHUB_ENV
          fi

      - name: Install Nox
        id: install-nox
        run: |
          python -m pip install --upgrade pip
          pip install nox

      - name: Test
        id: run-tests
        continue-on-error: true
        env:
          EXTRA_REQUIREMENTS_INSTALL: Cython
        run: |
          cd pkg
          if (Test-Path -Path noxfile.py -PathType Leaf) {
            nox --force-color -e tests-3 -- -vv tests/
          }

      - name: Store Job Status
        shell: bash
        if: ${{ always() }}
        run: |
          mkdir -p ${{ env.RESULTS_DIR }}
          echo https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}??check_suite_focus=true > ${{ env.RESULTS_DIR }}/url
          if [ -f pkg/noxfile.py ]; then
            echo ${{ steps.run-tests.outcome }} > ${{ env.RESULTS_DIR }}/status
          else
            echo "not-tested" > ${{ env.RESULTS_DIR }}/status
          fi
          cat ${{ env.RESULTS_DIR }}/url
          cat ${{ env.RESULTS_DIR }}/status
      {%- endraw %}

      - name: Upload Results
        uses: actions/upload-artifact@v2
        {%- raw %}
        if: ${{ always() }}
        {%- endraw %}
        with:
          name: {{ package }}
          path: .cache
